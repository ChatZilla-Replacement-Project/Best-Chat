//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestChat.Prefs.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BestChat.Prefs.Data.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Chat user {1} has left {2}..
        /// </summary>
        internal static string strDefQuitMsg {
            get {
                return ResourceManager.GetString("strDefQuitMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconnect when disconnected unexpectedly.
        /// </summary>
        internal static string strGlobalGeneralConnAutoReconnectName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnAutoReconnectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When your connection is lost unexpectedly, Best Chat can automatically reconnect to the server for you..
        /// </summary>
        internal static string strGlobalGeneralConnAutoReconnectToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnAutoReconnectToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C_haracter Encoding.
        /// </summary>
        internal static string strGlobalGeneralConnCharEncodingName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnCharEncodingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For multiple clients to correctly read messages with non-ASCII characters on IRC, they need to use the same character encoding..
        /// </summary>
        internal static string strGlobalGeneralConnCharEncodingToolTipName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnCharEncodingToolTipName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Quit _Message.
        /// </summary>
        internal static string strGlobalGeneralConnDefQuitMsgName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnDefQuitMsgName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a default quit message to use when on is not explicitly specified for a network or via the /quit command..
        /// </summary>
        internal static string strGlobalGeneralConnDefQuitMsgToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnDefQuitMsgToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable _Identification Server during connection process.
        /// </summary>
        internal static string strGlobalGeneralConnEnableIdentName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnEnableIdentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows Best Chat to connect to servers that require an ident response.
        /// </summary>
        internal static string strGlobalGeneralConnEnableIdentToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnEnableIdentToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Connection _Attempts:.
        /// </summary>
        internal static string strGlobalGeneralConnMaxAttemptsName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnMaxAttemptsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is number of times Best Chat attempts to connect to a server or network.  A value of 1 means Best Chat will never attempt to reconnect to the server..
        /// </summary>
        internal static string strGlobalGeneralConnMaxAttemptsToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnMaxAttemptsToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Connection.
        /// </summary>
        internal static string strGlobalGeneralConnName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R_ejoin when kicked.
        /// </summary>
        internal static string strGlobalGeneralConnRejoinAfterKickName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnRejoinAfterKickName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this is turned on, Best Chat will try (only once) to rejoin a channel you got kicked from.  Note: Some channels dislike auto-rejoin and will ban you.  So be careful..
        /// </summary>
        internal static string strGlobalGeneralConnRejoinAfterKickToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnRejoinAfterKickToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These preferences affect how Best Chat connects to the Internet..
        /// </summary>
        internal static string strGlobalGeneralConnToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited Attempts?.
        /// </summary>
        internal static string strGlobalGeneralConnUnlimitedAttemptsName {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnUnlimitedAttemptsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If checked, Best Chat will attempt to reconnect to any server forever.  If unchecked, the limit will be to the right..
        /// </summary>
        internal static string strGlobalGeneralConnUnlimitedAttemptsToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralConnUnlimitedAttemptsToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _General.
        /// </summary>
        internal static string strGlobalGeneralName {
            get {
                return ResourceManager.GetString("strGlobalGeneralName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Many preferences that don&apos;t have anywhere else go here..
        /// </summary>
        internal static string strGlobalGeneralToolTipText {
            get {
                return ResourceManager.GetString("strGlobalGeneralToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Global.
        /// </summary>
        internal static string strGlobalName {
            get {
                return ResourceManager.GetString("strGlobalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These preferences affect the entire application..
        /// </summary>
        internal static string strGlobalNameToolTipText {
            get {
                return ResourceManager.GetString("strGlobalNameToolTipText", resourceCulture);
            }
        }
    }
}
