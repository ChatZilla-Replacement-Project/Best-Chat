//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestChat.IRC.General.Ctrls {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BestChat.IRC.General.Ctrls.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None available.
        /// </summary>
        internal static string strChanServOptNull {
            get {
                return ResourceManager.GetString("strChanServOptNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this if the network doesn&apos;t have ChanServ.
        /// </summary>
        internal static string strChanServOptNullTooltip {
            get {
                return ResourceManager.GetString("strChanServOptNullTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to False / Not Available.
        /// </summary>
        internal static string strHasAlisFalse {
            get {
                return ResourceManager.GetString("strHasAlisFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ALIS is present on this network.
        /// </summary>
        internal static string strHasAlisFalseTooltip {
            get {
                return ResourceManager.GetString("strHasAlisFalseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True / Available.
        /// </summary>
        internal static string strHasAlisTrue {
            get {
                return ResourceManager.GetString("strHasAlisTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALIS is available and ready to use..
        /// </summary>
        internal static string strHasAlisTrueTooltip {
            get {
                return ResourceManager.GetString("strHasAlisTrueTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string strHasAlisUnknown {
            get {
                return ResourceManager.GetString("strHasAlisUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALIS may or may not be present.
        /// </summary>
        internal static string strHasAlisUnknownTooltip {
            get {
                return ResourceManager.GetString("strHasAlisUnknownTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to False / Not Available.
        /// </summary>
        internal static string strHasQFalse {
            get {
                return ResourceManager.GetString("strHasQFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Q present on this network.  Q is really only QuakeNet..
        /// </summary>
        internal static string strHasQFalseTooltip {
            get {
                return ResourceManager.GetString("strHasQFalseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True / Available.
        /// </summary>
        internal static string strHasQTrue {
            get {
                return ResourceManager.GetString("strHasQTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Q is present.
        /// </summary>
        internal static string strHasQTrueTooltip {
            get {
                return ResourceManager.GetString("strHasQTrueTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string strHasQUnknown {
            get {
                return ResourceManager.GetString("strHasQUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Q might or might not be present on this network.
        /// </summary>
        internal static string strHasQUnknownTooltip {
            get {
                return ResourceManager.GetString("strHasQUnknownTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None available.
        /// </summary>
        internal static string strNickServOptNull {
            get {
                return ResourceManager.GetString("strNickServOptNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this if the network doesn&apos;t have NickServ.
        /// </summary>
        internal static string strNickServOptNullTooltip {
            get {
                return ResourceManager.GetString("strNickServOptNullTooltip", resourceCulture);
            }
        }
    }
}
